import os
import time
import SNEKactions
import SNEKpayloader
import SNEKart
import pandas as pd

def payload_type_select():
    choice = input('Payloads as file or copiable text?  ')
    if choice in ['file','File','F','f']:
        print('\n')
        return 'file'
    elif choice in ['text','Text','T','t']:
        print('\n')
        return 'text'
    else:
        print("\nOption not valid!")
        payload_type_select()


def reverse(target):    
    command = input ('SNEK_SHELLS<<REVERSE>> ')

    SNEKactions.base_actions(command,'shells_reverse')

    if command in ['exit', 'EXIT']:
        return
    elif command in ['vector','VECTOR']:
        vectorList = [['nc'], ['bash'], ['sh']]

        vectorTable = pd.DataFrame(vectorList, columns = ['a'], index = ['1','2','3'])
        print('\n', vectorTable, '\n')

        payloadVector = input('Select a payload vector from the list above:  ')
        if payloadVector not in str(vectorList):
            print('ERROR: ', payloadVector, ' IS NOT A VALID PAYLOAD VECTOR')
        else:
            SNEKactions.write_vars('payloadVector', payloadVector)
    elif command in ['revshell', 'REVSHELL', 'RS']:
        shellOptions = [['cmd.exe','/bin/bash'],['powershell.exe','/bin/sh']]
        
        shellTable = pd.DataFrame(shellOptions, columns = ['Windows','Linux'], 
            index = ['1','2'])
        print('\n', shellTable, '\n')

        rShell = input('Select the shell to be returned:  ')
        SNEKactions.write_vars('rShell',rShell)
    elif command in ['hack','HACK']:
        print('\n')
        SNEKart.hack_art()
        print('LOADING EXPLOITS\n')
        time.sleep(2)
        print('\n')
        payloadType = payload_type_select()
        SNEKpayloader.get_payload('shells_reverse', payloadType)


    
    reverse(target)


def main(target):
    command = input ('SNEK_SHELLS>>> ')

    SNEKactions.base_actions(command,'shells')

    if command in ['exit', 'EXIT']:
        return
    elif command in ['reverse', 'REVERSE']:
        reverse(target)
    main(target)