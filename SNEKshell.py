# Copyright 2023 2xdropout

import os
import time
import SNEKactions
import SNEKpayloader
import SNEKart
import pandas as pd


def shells_actions():
    if SNEKactions.get_var('layer') == 'shells_reverse':
        vectorList = [['nc','php','lua'],['ncat','powershell','golang'],['rcat','python','awk'],['bash','ruby'],['sh','socat'],
            ['perl','sqlite3'], ['telnet','zsh']]

        vectorTable = pd.DataFrame(vectorList, columns = ['a','b','c'], index = ['1','2','3','4','5','6','7'])
    elif SNEKactions.get_var('layer') == 'shells_reverse':
        vectorList = [['nc'],['php'],['python']]

        vectorTable = pd.DataFrame(vectorList, columns = ['a'], index = ['1','2','3'])

    shellOptions = [['cmd.exe','/bin/bash'],['powershell.exe','/bin/sh']]
        
    shellTable = pd.DataFrame(shellOptions, columns = ['Windows','Linux'], 
        index = ['1','2'])

    print('\n', vectorTable, '\n')
    payloadVector = input('Select a payload vector from the list above:  ')
    if payloadVector not in str(vectorList):
        print('ERROR: ', payloadVector, ' IS NOT A VALID PAYLOAD VECTOR')
    else:
        SNEKactions.write_vars('payloadVector', payloadVector)
        
    print('\n', shellTable, '\n')

    shell = input('Select the shell to be returned:  ')
    SNEKactions.write_vars('shell',shell)


def bind_rev_actions():
    print('\n')
    SNEKart.hack_art()
    print('\nLOADING EXPLOITS\n')
    time.sleep(2)
    print('\n')
    payloadType = payload_type_select()
    SNEKpayloader.get_payload(payloadType)


def payload_type_select():
    choice = input('Payloads as file or copiable text?  ')
    if choice in ['file','File','F','f']:
        print('\n')
        return 'file'
    elif choice in ['text','Text','T','t']:
        print('\n')
        return 'text'
    else:
        print("\nOption not valid!")
        payload_type_select()